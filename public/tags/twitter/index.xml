<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>twitter on Mark Gingrass Blog</title>
    <link>/tags/twitter/</link>
    <description>Recent content in twitter on Mark Gingrass Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Dec 2017 23:59:34 +0000</lastBuildDate>
    
	<atom:link href="/tags/twitter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scrape Twitter, Text Manipulate, Autopost to WordPress</title>
      <link>/post/2017/12/16/scrape-twitter-text-manipuplate-autopost-wordpress/</link>
      <pubDate>Sat, 16 Dec 2017 23:59:34 +0000</pubDate>
      
      <guid>/post/2017/12/16/scrape-twitter-text-manipuplate-autopost-wordpress/</guid>
      <description>Tweet, Scrape, Manip, Publish It is highly recommended to watch this short video before working with these files. The video explains how each file works and how to run this for your own site.
I will also publish these on my GitHub site here. What is a GitHub you say? See previous post here for quick 5 minute tutorial
Watch Video First [embed]https://youtu.be/ioNIAqZa3go[embed]
Note that the below code has R Markdown language in it which makes publishing this particular post difficult.</description>
    </item>
    
    <item>
      <title>Scrape Twitter, Text Manipulate, Autopost to WordPress</title>
      <link>/post/2017/12/16/scrape-twitter-text-manipuplate-autopost-wordpress/</link>
      <pubDate>Sat, 16 Dec 2017 23:59:34 +0000</pubDate>
      
      <guid>/post/2017/12/16/scrape-twitter-text-manipuplate-autopost-wordpress/</guid>
      <description>Tweet, Scrape, Manip, Publish It is highly recommended to watch this short video before working with these files. The video explains how each file works and how to run this for your own site.
I will also publish these on my GitHub site here.  What is a GitHub you say? See previous post here for quick 5 minute tutorial
Watch Video First [embed]https://youtu.be/ioNIAqZa3go[embed]
Note that the below code has R Markdown language in it which makes publishing this particular post difficult.</description>
    </item>
    
    <item>
      <title>Build Word Cloud from Twitter Using R</title>
      <link>/post/2017/12/08/build-word-cloud-twitter-using-r/</link>
      <pubDate>Fri, 08 Dec 2017 04:24:50 +0000</pubDate>
      
      <guid>/post/2017/12/08/build-word-cloud-twitter-using-r/</guid>
      <description>How to create a WordCloud with Tweet data This is a follow up of this Twitter Scraper video I posted last week. If you have to, review previous video before proceeding to data manipulation and WordClouds!
 In this video you will learn the essentials of:
 How to connect to the Twitter API
 What is a Corpus
 What is a Term Document Matrix
 Creating Word Clouds</description>
    </item>
    
    <item>
      <title>Build Word Cloud from Twitter Using R</title>
      <link>/post/2017/12/08/build-word-cloud-twitter-using-r/</link>
      <pubDate>Fri, 08 Dec 2017 04:24:50 +0000</pubDate>
      
      <guid>/post/2017/12/08/build-word-cloud-twitter-using-r/</guid>
      <description>How to create a WordCloud with Tweet data This is a follow up of this Twitter Scraper video I posted last week. If you have to, review previous video before proceeding to data manipulation and WordClouds!
In this video you will learn the essentials of:
 How to connect to the Twitter API
 What is a Corpus
 What is a Term Document Matrix
 Creating Word Clouds</description>
    </item>
    
    <item>
      <title>R Lowercase Function in Corpus Error Solved</title>
      <link>/post/2017/12/07/r-tm_maptweet-corpus-content_transformertolower-error-solved/</link>
      <pubDate>Thu, 07 Dec 2017 05:18:33 +0000</pubDate>
      
      <guid>/post/2017/12/07/r-tm_maptweet-corpus-content_transformertolower-error-solved/</guid>
      <description>In my last video tutorial, I demonstrated the steps to tap into the power of the Twitter API to download Tweets based on search terms and import them into R. My plan was to make a follow up video showing how to clean the twitter data and run a Word Cloud on common terms.
However, I ran into a slight snag early on.
The code was supposed to be simple and quick.</description>
    </item>
    
    <item>
      <title>R Lowercase Function in Corpus Error Solved</title>
      <link>/post/2017/12/07/r-tm_maptweet-corpus-content_transformertolower-error-solved/</link>
      <pubDate>Thu, 07 Dec 2017 05:18:33 +0000</pubDate>
      
      <guid>/post/2017/12/07/r-tm_maptweet-corpus-content_transformertolower-error-solved/</guid>
      <description>In my last video tutorial, I demonstrated the steps to tap into the power of the Twitter API to download Tweets based on search terms and import them into R. My plan was to make a follow up video showing how to clean the twitter data and run a Word Cloud on common terms.
However, I ran into a slight snag early on.
The code was supposed to be simple and quick.</description>
    </item>
    
    <item>
      <title>R Programming Twitter Scraper</title>
      <link>/post/2017/11/21/r-programming-twitter-scraper/</link>
      <pubDate>Tue, 21 Nov 2017 17:07:51 +0000</pubDate>
      
      <guid>/post/2017/11/21/r-programming-twitter-scraper/</guid>
      <description>Create a Twitter Scrapper using R programming language in these very simple steps:
[embed]https://youtu.be/1_K01qD4Exw[/embed]
Follow these simple steps to start srapping:
Create Twitter API Application first: https://apps.twitter.com/.
 Copy the code below into an R script.
 Install packages “twitteR” and “ROAuth” if required.
 Change the search terms to your liking.
 library(twitteR) library(ROAuth)
Set API Keys api_key &amp;lt;- “XXXXXXXXXXXXXXXXXXXX” api_secret &amp;lt;- “xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx”
access_token &amp;lt;- “xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx” access_token_secret &amp;lt;- “xxxxxxxxxxxxxxxxxxxxxxxxxxxx”</description>
    </item>
    
    <item>
      <title>R Programming Twitter Scraper</title>
      <link>/post/2017/11/21/r-programming-twitter-scraper/</link>
      <pubDate>Tue, 21 Nov 2017 17:07:51 +0000</pubDate>
      
      <guid>/post/2017/11/21/r-programming-twitter-scraper/</guid>
      <description>Create a Twitter Scrapper using R programming language in these very simple steps:
[embed]https://youtu.be/1_K01qD4Exw[/embed]
Follow these simple steps to start srapping:
 Create Twitter API Application first: https://apps.twitter.com/.
 Copy the code below into an R script.
 Install packages &amp;ldquo;twitteR&amp;rdquo; and &amp;ldquo;ROAuth&amp;rdquo; if required.
 Change the search terms to your liking.
 library(twitteR) library(ROAuth)
Set API Keys api_key &amp;lt;- &amp;ldquo;XXXXXXXXXXXXXXXXXXXX&amp;rdquo; api_secret &amp;lt;- &amp;ldquo;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo;
access_token &amp;lt;- &amp;ldquo;xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo; access_token_secret &amp;lt;- &amp;ldquo;xxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo;</description>
    </item>
    
  </channel>
</rss>