<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>api on Mark Gingrass Blog</title>
    <link>/tags/api/</link>
    <description>Recent content in api on Mark Gingrass Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Dec 2017 04:24:50 +0000</lastBuildDate>
    
	<atom:link href="/tags/api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Word Cloud from Twitter Using R</title>
      <link>/post/2017/12/08/build-word-cloud-twitter-using-r/</link>
      <pubDate>Fri, 08 Dec 2017 04:24:50 +0000</pubDate>
      
      <guid>/post/2017/12/08/build-word-cloud-twitter-using-r/</guid>
      <description>How to create a WordCloud with Tweet data This is a follow up of this Twitter Scraper video I posted last week. If you have to, review previous video before proceeding to data manipulation and WordClouds!
 In this video you will learn the essentials of:
 How to connect to the Twitter API
 What is a Corpus
 What is a Term Document Matrix
 Creating Word Clouds</description>
    </item>
    
    <item>
      <title>Build Word Cloud from Twitter Using R</title>
      <link>/post/2017/12/08/build-word-cloud-twitter-using-r/</link>
      <pubDate>Fri, 08 Dec 2017 04:24:50 +0000</pubDate>
      
      <guid>/post/2017/12/08/build-word-cloud-twitter-using-r/</guid>
      <description>How to create a WordCloud with Tweet data This is a follow up of this Twitter Scraper video I posted last week. If you have to, review previous video before proceeding to data manipulation and WordClouds!
In this video you will learn the essentials of:
 How to connect to the Twitter API
 What is a Corpus
 What is a Term Document Matrix
 Creating Word Clouds</description>
    </item>
    
    <item>
      <title>R Programming Twitter Scraper</title>
      <link>/post/2017/11/21/r-programming-twitter-scraper/</link>
      <pubDate>Tue, 21 Nov 2017 17:07:51 +0000</pubDate>
      
      <guid>/post/2017/11/21/r-programming-twitter-scraper/</guid>
      <description>Create a Twitter Scrapper using R programming language in these very simple steps:
[embed]https://youtu.be/1_K01qD4Exw[/embed]
Follow these simple steps to start srapping:
Create Twitter API Application first: https://apps.twitter.com/.
 Copy the code below into an R script.
 Install packages “twitteR” and “ROAuth” if required.
 Change the search terms to your liking.
 library(twitteR) library(ROAuth)
Set API Keys api_key &amp;lt;- “XXXXXXXXXXXXXXXXXXXX” api_secret &amp;lt;- “xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx”
access_token &amp;lt;- “xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx” access_token_secret &amp;lt;- “xxxxxxxxxxxxxxxxxxxxxxxxxxxx”</description>
    </item>
    
    <item>
      <title>R Programming Twitter Scraper</title>
      <link>/post/2017/11/21/r-programming-twitter-scraper/</link>
      <pubDate>Tue, 21 Nov 2017 17:07:51 +0000</pubDate>
      
      <guid>/post/2017/11/21/r-programming-twitter-scraper/</guid>
      <description>Create a Twitter Scrapper using R programming language in these very simple steps:
[embed]https://youtu.be/1_K01qD4Exw[/embed]
Follow these simple steps to start srapping:
 Create Twitter API Application first: https://apps.twitter.com/.
 Copy the code below into an R script.
 Install packages &amp;ldquo;twitteR&amp;rdquo; and &amp;ldquo;ROAuth&amp;rdquo; if required.
 Change the search terms to your liking.
 library(twitteR) library(ROAuth)
Set API Keys api_key &amp;lt;- &amp;ldquo;XXXXXXXXXXXXXXXXXXXX&amp;rdquo; api_secret &amp;lt;- &amp;ldquo;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo;
access_token &amp;lt;- &amp;ldquo;xxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo; access_token_secret &amp;lt;- &amp;ldquo;xxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;rdquo;</description>
    </item>
    
  </channel>
</rss>